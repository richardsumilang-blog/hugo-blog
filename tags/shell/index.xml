<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on Richard Sumilang</title>
    <link>https://www.richardsumilang.com/tags/shell/</link>
    <description>Recent content in Shell on Richard Sumilang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Feb 2015 19:25:00 -0800</lastBuildDate><atom:link href="https://www.richardsumilang.com/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A thing or two about style guides</title>
      <link>https://www.richardsumilang.com/posts/programming/a-thing-or-two-about-style-guides/</link>
      <pubDate>Sun, 08 Feb 2015 19:25:00 -0800</pubDate>
      
      <guid>https://www.richardsumilang.com/posts/programming/a-thing-or-two-about-style-guides/</guid>
      <description>&lt;p&gt;A style guide should be chosen when working on a solo project or with a team.
This keeps the code manageable when you or your peers come back to work on it in
the future. It doesn&amp;rsquo;t matter which style guideline you choose as long as you
stick with it. In a sense, writing clean code will also help reduce technical
debt. Below is a collection of style guides that I collected over time. Some
important rules are repeated in other styles. It&amp;rsquo;s nice to keep consistency (to
a degree) if you are writing in multiple programming languages but ultimately
it&amp;rsquo;s best to do what&amp;rsquo;s best for each language.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Any fool can write code that a computer can understand.
Good programmers write code that humans can understand.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Martin Fowler, Refactoring: Improving the Design of Existing Code&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>
